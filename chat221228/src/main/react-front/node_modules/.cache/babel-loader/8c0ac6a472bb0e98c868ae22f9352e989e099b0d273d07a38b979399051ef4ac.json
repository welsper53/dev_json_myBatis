{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace_java\\\\chat221228\\\\src\\\\main\\\\react-front\\\\src\\\\App.jsx\";\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FireDeptPage from './components/page/FireDeptPage';\nimport LoginPage from './components/login/LoginPage';\n// import DeptPage from './components/page/DeptPage';\nimport EmpPage from './components/page/EmpPage';\nimport HomePage from './components/page/HomePage';\n\n// index.js에서 브라우저 라우터로 감싸진 App태그 속성값으로 넘어온 주소번지를 받는다\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = _ref => {\n  let {\n    authLogic\n  } = _ref;\n  // 사용자 정의 컴포넌트에서 return 다음에 오는 코드가 element의 집합\n  // Router 이용하면 SPA(Single Page Application) 누릴 수 있다\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          authLogic: authLogic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home/:userid\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(HomePage, {\n          authLogic: authLogic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/emp\",\n        exact: true,\n        elemnet: /*#__PURE__*/_jsxDEV(EmpPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nexport default App;\n\n/* \n라우터 설정을 여기서 한다\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","FireDeptPage","LoginPage","EmpPage","HomePage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_ref","authLogic","children","path","exact","element","fileName","_jsxFileName","lineNumber","columnNumber","elemnet","_c","$RefreshReg$"],"sources":["D:/workspace_java/chat221228/src/main/react-front/src/App.jsx"],"sourcesContent":["import { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport FireDeptPage from './components/page/FireDeptPage';\nimport LoginPage from './components/login/LoginPage';\n// import DeptPage from './components/page/DeptPage';\nimport EmpPage from './components/page/EmpPage';\nimport HomePage from './components/page/HomePage';\n\n// index.js에서 브라우저 라우터로 감싸진 App태그 속성값으로 넘어온 주소번지를 받는다\nconst App = ({authLogic}) => {\n  // 사용자 정의 컴포넌트에서 return 다음에 오는 코드가 element의 집합\n  // Router 이용하면 SPA(Single Page Application) 누릴 수 있다\n  return (\n    <>\n      <Routes>\n        <Route path='/' exact={true} element={<LoginPage authLogic={authLogic}/>} />\n        <Route path='/home/:userid' exact={true} element={<HomePage authLogic={authLogic}/>} />\n        {/* <Route path='/dept/:id' exact={true} element={<FireDeptPage/>}/> */}\n        {/* <Route path='/dept/:id' exact={true} element={<DeptPage/>} /> */}\n        <Route path='/emp' exact={true} elemnet={<EmpPage/>} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n\n/* \n라우터 설정을 여기서 한다\n*/"],"mappings":";AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAE7C,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,SAAS,MAAM,8BAA8B;AACpD;AACA,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,GAAG,GAAGC,IAAA,IAAiB;EAAA,IAAhB;IAACC;EAAS,CAAC,GAAAD,IAAA;EACtB;EACA;EACA,oBACEJ,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACN,MAAM;MAAAY,QAAA,gBACLN,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,GAAG;QAACC,KAAK,EAAE,IAAK;QAACC,OAAO,eAAET,OAAA,CAACJ,SAAS;UAACS,SAAS,EAAEA;QAAU;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC5Eb,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,eAAe;QAACC,KAAK,EAAE,IAAK;QAACC,OAAO,eAAET,OAAA,CAACF,QAAQ;UAACO,SAAS,EAAEA;QAAU;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAGvFb,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE,IAAK;QAACM,OAAO,eAAEd,OAAA,CAACH,OAAO;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAChD,iBACR;AAEP,CAAC;AAAAE,EAAA,GAdKZ,GAAG;AAgBT,eAAeA,GAAG;;AAElB;AACA;AACA;AAFA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}