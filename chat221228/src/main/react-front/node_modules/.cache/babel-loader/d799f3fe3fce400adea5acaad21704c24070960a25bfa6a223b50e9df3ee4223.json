{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace_java\\\\chat221228\\\\src\\\\main\\\\react-front\\\\src\\\\components\\\\login\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = _ref => {\n  _s();\n  let {\n    authLogic\n  } = _ref;\n  const navigate = useNavigate();\n\n  // 페이지 이동 함수 구현 - \n  //sendRedirect 나 forward가 없어서 만들어 쓴다\n  const moveHome = userId => {\n    console.log(userId);\n    navigate({\n      pathname: '/home/' + userId\n    });\n  };\n  const handleLogin = () => {\n    // service -> authLogic.js에 선언된 클래스 -> login함수 선언\n    // 파라미터로 넘기는 문자열에 따라서 구글로그인 또는 깃허브 로그인\n    // AuthLogic클래스의 getProvider함수에서 분기되어 있음\n    authLogic.login(\"Google\") /* 파라미터: provider이름 */\n    // .then(data => console.log())/* 파라미터로 유저아이디를 넘겨야하니까 확인해보자 */\n    .then(data => moveHome(data.user.uid)); /* 파라미터로 유저아이디를 넘겨야하니까 확인해보자 */\n  };\n\n  use;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        navigate(\"/\");\n      },\n      children: \"\\uD648\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleLogin,\n      children: \"Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Button","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_ref","_s","authLogic","navigate","moveHome","userId","console","log","pathname","handleLogin","login","then","data","user","uid","use","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace_java/chat221228/src/main/react-front/src/components/login/LoginPage.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst LoginPage = ({authLogic}) => {\r\n   const navigate = useNavigate();\r\n   \r\n   // 페이지 이동 함수 구현 - \r\n   //sendRedirect 나 forward가 없어서 만들어 쓴다\r\n   const moveHome = (userId) => {\r\n      console.log(userId);\r\n      navigate({pathname:'/home/' + userId})\r\n   }\r\n   \r\n   const handleLogin = () => {\r\n      // service -> authLogic.js에 선언된 클래스 -> login함수 선언\r\n      // 파라미터로 넘기는 문자열에 따라서 구글로그인 또는 깃허브 로그인\r\n      // AuthLogic클래스의 getProvider함수에서 분기되어 있음\r\n      authLogic.login(\"Google\")/* 파라미터: provider이름 */\r\n      // .then(data => console.log())/* 파라미터로 유저아이디를 넘겨야하니까 확인해보자 */\r\n      .then(data => moveHome(data.user.uid))/* 파라미터로 유저아이디를 넘겨야하니까 확인해보자 */\r\n   };\r\n\r\n   use\r\n\r\n   return (\r\n      <>\r\n      <Button onClick = {() => {\r\n         navigate(\"/\")\r\n      }}>홈페이지</Button>\r\n      <Button onClick = {handleLogin}>Google</Button>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default LoginPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,SAAS,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAACC;EAAS,CAAC,GAAAF,IAAA;EAC3B,MAAMG,QAAQ,GAAGT,WAAW,EAAE;;EAE9B;EACA;EACA,MAAMU,QAAQ,GAAIC,MAAM,IAAK;IAC1BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnBF,QAAQ,CAAC;MAACK,QAAQ,EAAC,QAAQ,GAAGH;IAAM,CAAC,CAAC;EACzC,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACvB;IACA;IACA;IACAP,SAAS,CAACQ,KAAK,CAAC,QAAQ,CAAC;IACzB;IAAA,CACCC,IAAI,CAACC,IAAI,IAAIR,QAAQ,CAACQ,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC;EACzC,CAAC;;EAEDC,GAAG;EAEH,oBACGnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACApB,OAAA,CAACH,MAAM;MAACwB,OAAO,EAAIA,CAAA,KAAM;QACtBd,QAAQ,CAAC,GAAG,CAAC;MAChB,CAAE;MAAAa,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAChBzB,OAAA,CAACH,MAAM;MAACwB,OAAO,EAAIR,WAAY;MAAAO,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAC5C;AAET,CAAC;AAAApB,EAAA,CA7BKF,SAAS;EAAA,QACKL,WAAW;AAAA;AAAA4B,EAAA,GADzBvB,SAAS;AA+Bf,eAAeA,SAAS;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}